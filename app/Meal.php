<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Str;
use Illuminate\Validation\ValidationException;

class Meal extends Model
{
    protected $fillable = ["name", "status", "eaten_at"];

    protected $dates = ["eaten_at"];

    protected static function boot()
    {
        self::saving(function ($meal) {
            if(!app()->runningInConsole() && $meal->status == "OPEN" && static::open($meal->id)->count() > 0) {
                throw ValidationException::withMessages(["status" => "Whoops! Only one meal can be open at a time"]);
            }

            $count = 0;
            do{
                $slug = Str::slug($meal->name);
                if($count > 0) $slug .= "-{$count}";
                $count++;
            } while(static::whereSlug($slug)->exists());

            $meal->slug = $slug;
        });
        parent::boot(); // TODO: Change the autogenerated stub
    }

    public function scopeClosed($query) {
        $query->whereStatus("CLOSED");
    }

    public function scopeOpen($query, $except_id = null) {
        $query->whereStatus("OPEN");
        if(!is_null($except_id)) $query->where("id", "<>", $except_id);
    }

    public function mealRegistrations() {
        return $this->hasMany(MealRegistration::class);
    }

}
